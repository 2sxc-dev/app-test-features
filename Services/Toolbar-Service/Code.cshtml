@inherits Custom.Hybrid.Razor14

<h1>Toolbar Service - Call Code etc.</h1>
<p>
  Show various cases where a toolbar service is just to-HTMLed
</p>
@{
  var tlbTest = CreateInstance("ToolbarServiceTests.cs");
  var empty = Kit.Toolbar.Empty();  
}

<h2>Tweak and Parameters together should error</h2>
@{
  var isError = false;
  var errMessage = "";
  try {
    var codeWithBothParamsShouldError = Kit.Toolbar.Empty().Code("withParams", parameters: "key=value", tweak: b => b.Parameters(new { testParam = 27 }));
  }
  catch (Exception ex) {
    isError = true;
    errMessage = ex.Message;
  }
}
<p>
  Ran Tweak and parameters together, should error: Error: @isError @(isError ? "✅" : "⛔")
  <br>
  Error message: @errMessage
</p>

<hr>

<h2>Code with Parameters - working on Tweak</h2>
<ol>
  @tlbTest.TbTestAsVisibleTag("Code with Params", "classic", 
    empty.Code("withParams", parameters: new { testParam = 27 }))
  @tlbTest.TbTestAsVisibleTag("Code with Params", "tweak", 
    empty.Code("withParams", tweak: b => b.Parameters(new { testParam = 27 }).Parameters("key", "value")))
</ol>
<hr>
<h2>Basic code</h2>
<ol>
  @tlbTest.TbTestAsVisibleTag("Code new and old", "classic", 
    empty.Code("callMe", parameters: new { id = 27 }).Button("custom", parameters: "call=callMe&id=27"))

  @tlbTest.TbTestAsVisibleTag("Space - invalid, should throw JS error", "classic", 
    empty.Code("call me"))

  @tlbTest.TbTestAsVisibleTag("Bracket - invalid", "classic", 
    empty.Code("callMe(27)"))

</ol>


<script>
  function callMe(p, q, r) {
    console.log('call me', p, q, r);
  }

  function withParams(methodParams, q, r) {
    console.log("Go parameters:", methodParams);
    console.log('with params', methodParams, q, r);
  }
</script>