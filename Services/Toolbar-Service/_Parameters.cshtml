@inherits Custom.Hybrid.Razor14
@using ToSic.Razor.Blade;
@using ToSic.Sxc.Edit.Toolbar;

<h1>Toolbar Service - Params.</h1>
<p>
  Show various cases with params.
</p>
@{
  var T = Kit.Toolbar;
  var TE = T.Empty().Layout();

  var itemToCopy = AsDynamic(App.Data["Dummy"].First());

  var code1 = Kit.Toolbar.Empty()
    .Code("callMe", parameters: new { id = 27 })
    .Button("custom", parameters: "call=callMe&id=27")
    ;

  var codeSpace = Kit.Toolbar.Empty().Code("call me");
  var codeBracket = Kit.Toolbar.Empty().Code("callMe(27)");
}

<ol>
  @ToolbarTest("Simple string param", TE.Parameters("test=1"))
  @ToolbarTest("Simple string param 2x", TE.Parameters("test=1&id=7"))
  @ToolbarTest("Simple obj param", TE.Parameters(new { test = "simple", ID = 27}))

  @ToolbarTest("Simple string param in parameters", TE.Parameters(parameters: "test=1"))
  @ToolbarTest("Simple string param 2x in parameters", TE.Parameters(parameters: "test=1&id=7"))
  @ToolbarTest("Simple obj param in parameters", TE.Parameters(parameters: new { test = "simple", ID = 27}))

  <hr>
  @ToolbarTest("2 uses of parameters - should join into 3 params", TE.Parameters("strTarget=true").Parameters(parameters: new { test = "simple", ID = 27}))
</ol>

<hr>
<h2>With target object</h2>
<ol>
  @ToolbarTest("For-item and parameters", TE.For(itemToCopy).Parameters(parameters: new { test = "simple", ID = 27}))
  @ToolbarTest("Parameters with item in target", TE.Parameters(itemToCopy, parameters: new { test = "simple", ID = 27}))
</ol>


<hr>
<h2>On Initializer</h2>
<ol>
  @ToolbarTest("Empty with parameters", T.Empty(itemToCopy, parameters: "test=5", prefill: new { ok = true, idx = "idx2"}))
</ol>


@functions {
  dynamic ToolbarTest(string title, IToolbarBuilder tlb) {
    return Tag.Li(
      Tag.Strong(title),
      tlb.AsTag(),
      Tag.Br(),
      Tag.Code(tlb.AsJson())
    );
  }
}