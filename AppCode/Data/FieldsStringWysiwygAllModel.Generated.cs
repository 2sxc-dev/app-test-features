// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "FieldsStringWysiwygAllModel.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class FieldsStringWysiwygAllModel
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   CSharpCustomModelsGenerator
// App/Edition: App Test Features/
// User:        2sichost
namespace AppCode.Data
{
  // This is a generated custom model class for FieldsStringWysiwygAll 
  // To extend/modify it, see instructions above.

  /// <summary>
  /// FieldsStringWysiwygAll custom model. <br/>
  /// Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// This is a lightweight model that inherits from CustomModel. <br/>
  /// For properties, use the strongly-typed access such as `.DialogDefaultHtml`. <br/>
  /// For advanced features, consider using the full CustomItem instead.
  /// </summary>
  public partial class FieldsStringWysiwygAllModel: AutoGenerated.ZAutoGenFieldsStringWysiwygAllModel
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for Default.FieldsStringWysiwygAllModel in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZAutoGenFieldsStringWysiwygAllModel: Custom.Data.CustomModel
  {
    /// <summary>
    /// DialogDefaultHtml as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DialogDefaultHtml", scrubHtml: true) etc.
    /// </summary>
    public string DialogDefaultHtml => _item.String("DialogDefaultHtml", fallback: "");

    /// <summary>
    /// DialogPrefill as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DialogPrefill", scrubHtml: true) etc.
    /// </summary>
    public string DialogPrefill => _item.String("DialogPrefill", fallback: "");

    /// <summary>
    /// DisabledDialog as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DisabledDialog", scrubHtml: true) etc.
    /// </summary>
    public string DisabledDialog => _item.String("DisabledDialog", fallback: "");

    /// <summary>
    /// DisabledInline as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("DisabledInline", scrubHtml: true) etc.
    /// </summary>
    public string DisabledInline => _item.String("DisabledInline", fallback: "");

    /// <summary>
    /// Ephemeral as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Ephemeral", scrubHtml: true) etc.
    /// </summary>
    public string Ephemeral => _item.String("Ephemeral", fallback: "");

    /// <summary>
    /// FormulaBasic as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("FormulaBasic", scrubHtml: true) etc.
    /// </summary>
    public string FormulaBasic => _item.String("FormulaBasic", fallback: "");

    /// <summary>
    /// InlineDefaultHtml as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("InlineDefaultHtml", scrubHtml: true) etc.
    /// </summary>
    public string InlineDefaultHtml => _item.String("InlineDefaultHtml", fallback: "");

    /// <summary>
    /// InlinePrefill as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("InlinePrefill", scrubHtml: true) etc.
    /// </summary>
    public string InlinePrefill => _item.String("InlinePrefill", fallback: "");

    /// <summary>
    /// NoTranslate as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("NoTranslate", scrubHtml: true) etc.
    /// </summary>
    public string NoTranslate => _item.String("NoTranslate", fallback: "");
  }
}