// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "FieldsNumber.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class FieldsNumber
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   CSharpDataModelsGenerator
// App/Edition: App Test Features/
// User:        2sichost
namespace AppCode.Data
{
  // This is a generated class for FieldsNumber 
  // To extend/modify it, see instructions above.

  /// <summary>
  /// FieldsNumber data. <br/>
  /// Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.NumberDropdown`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  public partial class FieldsNumber: AutoGenerated.ZAutoGenFieldsNumber
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for Default.FieldsNumber in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZAutoGenFieldsNumber: Custom.Data.CustomItem
  {
    /// <summary>
    /// NumberDropdown as int. <br/>
    /// To get other types use methods such as .Decimal("NumberDropdown")
    /// </summary>
    public int NumberDropdown => _item.Int("NumberDropdown");

    /// <summary>
    /// NumberDropdownFreeText as int. <br/>
    /// To get other types use methods such as .Decimal("NumberDropdownFreeText")
    /// </summary>
    public int NumberDropdownFreeText => _item.Int("NumberDropdownFreeText");

    /// <summary>
    /// NumberDropdownUnconfigured as int. <br/>
    /// To get other types use methods such as .Decimal("NumberDropdownUnconfigured")
    /// </summary>
    public int NumberDropdownUnconfigured => _item.Int("NumberDropdownUnconfigured");

    /// <summary>
    /// NumberUnconfigured as int. <br/>
    /// To get other types use methods such as .Decimal("NumberUnconfigured")
    /// </summary>
    public int NumberUnconfigured => _item.Int("NumberUnconfigured");
  }
}