// DO NOT MODIFY THIS FILE - IT IS AUTO-GENERATED
// See also: https://go.2sxc.org/copilot-data
// To extend it, create a "WithMetadataMetadata.cs" with this contents:
/*
namespace AppCode.Data
{
  public partial class WithMetadataMetadata
  {
    // Add your own properties and methods here
  }
}
*/

// Generator:   DataClassesGenerator v17.03.01
// App/Edition: App Test Features/
// User:        2sichost
// When:        2024-03-04 13:17:54Z
namespace AppCode.Data
{
  // This is a generated class for WithMetadataMetadata 
  // To extend/modify it, see instructions above.

  /// <summary>
  /// WithMetadataMetadata data. <br/>
  /// Generated 2024-03-04 13:17:54Z. Re-generate whenever you change the ContentType. <br/>
  /// <br/>
  /// Default properties such as `.Title` or `.Id` are provided in the base class. <br/>
  /// Most properties have a simple access, such as `.Age`. <br/>
  /// For other properties or uses, use methods such as
  /// .IsNotEmpty("FieldName"), .String("FieldName"), .Children(...), .Picture(...), .Html(...).
  /// </summary>
  public partial class WithMetadataMetadata: AutoGenerated.ZagWithMetadataMetadata
  {  }
}

namespace AppCode.Data.AutoGenerated
{
  /// <summary>
  /// Auto-Generated base class for Default.WithMetadataMetadata in separate namespace and special name to avoid accidental use.
  /// </summary>
  public abstract class ZagWithMetadataMetadata: Custom.Data.CustomItem
  {
    /// <summary>
    /// Age as int. <br/>
    /// To get other types use methods such as .Decimal("Age")
    /// </summary>
    public int Age => _item.Int("Age");

    /// <summary>
    /// Color as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Color", scrubHtml: true) etc.
    /// </summary>
    public string Color => _item.String("Color", fallback: "");

    /// <summary>
    /// Title as string. <br/>
    /// For advanced manipulation like scrubHtml, use .String("Title", scrubHtml: true) etc.
    /// </summary>
    public new string Title => _item.String("Title", fallback: "");
  }
}