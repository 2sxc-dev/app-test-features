@inherits Custom.Hybrid.Razor14
@using ToSic.Sxc.Services;
@using System.IO;
@using System.Linq;
@{
  var testTree = CreateInstance("TestTreeHelpers.cs");
  var skipFiles = (DynamicModel.SkipFiles as bool?) ?? false;
  var pathParam = "testpath";
  var testPath = CmsContext.Page.Parameters[pathParam] ?? "";
  var pathParts = testPath.Replace("\\", "/").Split('/');
  var upPath = FixSlash(String.Join("/", pathParts.Take(pathParts.Length - 2).ToArray()) + "/");

  var linker = CreateInstance("TestLinker.cs");
  var pParams = CmsContext.Page.Parameters;
}
@functions {
  public string FixSlash(string original) {
    // The second replace is a workaround because Oqtane messes up links containing slashes, they we url-encode them for now
    return original.Replace("\\", "/").Replace("/", "%2f");
  }
}
<hr>
<h3>Test Groups / Folders</h3>
@if (pathParts.Length > 1) {
  <a href='@Link.To(parameters: "")'>‚ÜñÔ∏è Root</a>
}
@if (pathParts.Length > 2) {
  <text> | </text>
  <a href='@Link.To(parameters: pathParam + "=" + upPath)'>‚¨ÜÔ∏è Up</a>
}
<ol>
  @foreach (var subFolder in testTree.SubFolderNames(DynamicModel.Path)) {
    <li>
      <a href='@Link.To(parameters: pathParam + "=" + FixSlash(subFolder + "/"))'>üìÅ @subFolder</a>
    </li>
  }
</ol>
@if (!skipFiles) {
  <hr>
  <h3>Tests</h3>
  <ol>
    @foreach (var subTest in testTree.FileNames(DynamicModel.Path)) {
      var niceName = System.IO.Path.GetFileName(subTest).Trim('_').Replace(".cshtml", "");
      <li>
        @linker.SubLinkWithIndicator(pathParam, FixSlash(subTest), niceName)
      </li>
    }
  </ol>
}
@{
  // try to auto-include __Assets-Auto.cshtml
  var assetsPath = DynamicModel.Path + "__Assets.cshtml";
  var checkPath = "";
  if (testTree.HasAutoAssets(DynamicModel.Path)) {
    var relPath = "../" + System.IO.Path.GetDirectoryName(testPath).Replace("\\", "/") + "/__Assets.cshtml";
    @Html.Partial(relPath);
    <br>
    <sub>Info: __Assets.cshtml auto-included</sub>
  }
}