@inherits Custom.Dnn.Razor12
@{
  var codeFile = "LogDnn.cs";
  var test = CreateInstance("TestLog.cs");
  var code = CreateInstance(codeFile);
}
@functions {
  void TestCall() {
    var call = Log.Call("no parameters");
    Log.Add("Message in the middle!");
    call("done");
  }
  bool TestCallBool(string param) {
    var call = Log.Call<bool>("param:" + param);
    Log.Add("Message in the middle!");
    var result = true;
    return call(result, result.ToString());
  }
}

<h1>Tests on this Page and the Helper</h1>
<ol>
  <li>Page Class Type: @this.GetType()</li>
  <li>Page Class Base Type: @this.GetType().BaseType</li>
  <li style="color:red;">Log Type: @Log.GetType()</li>
  <li>Class of TestLog.cs: @test.GetType()</li>
  <li style="color:red;">Log Type SimpleTest: @test.SimpleTest(Log)</li>
  <li>Test Call with nothing returned (check insights) @{ TestCall(); }</li>
  <li>TestCall Bool (verify it's in insights): @TestCallBool("some parameter")</li>
</ol>
<pre>@test.DumpLog(Log)</pre>

<hr>
<h1>@code.CodeType()</h1>
<h2>@code.BaseType()</h2>
<h3 style="color:red;">@code.LogType()</h3>
<h3 style="color:red;">@code.SimpleTest()</h3>
<pre>@code.DumpLog()</pre>


<hr>
<h1 id="codeType">...loading...</h1>
<h2 id="baseType">...loading...</h2>
<h3 id="logType" style="color:red;">...loading...</h3>
<h3 id="simpleTest" style="color:red;">...loading...</h3>
<pre id="dumpLog" turn-on='{ "run": "window.downloadJSAtOnload()" }'>...loading...</pre>
@{
  var page = GetService<ToSic.Sxc.Services.IPageService>();
  page.Activate("jQuery");
  page.Activate("2sxc.JsCore");
  page.Activate("turnOn");
}
<script type="text/javascript">
  // Use an IFFE to ensure the variables are not exposed globaly
  // See https://developer.mozilla.org/en-US/docs/Glossary/IIFE
  (() => {
    // The init function which should be called
    function downloadJSAtOnload() {
      $2sxc(@CmsContext.Module.Id).webApi
        .get('app/auto/CodeLog/api/Dnn12/ApiTypeInfo')
        .then(data => {
          console.log(data);
          document.getElementById("codeType").innerHTML = data.codeType;
          document.getElementById("baseType").innerHTML = data.baseType;
          document.getElementById("logType").innerHTML = data.logType;
          document.getElementById("simpleTest").innerHTML = data.simpleTest;
          document.getElementById("dumpLog").innerHTML = data.dumpLog;
        });
    }
    // Generate a new object if none exists yet (best practice)
    window.downloadJSAtOnload = window.downloadJSAtOnload || downloadJSAtOnload;
  })();
</script>
